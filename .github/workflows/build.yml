name: Build Iris

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch: # Permite executar manualmente

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Build Iris with Gradle
      run: ./gradlew iris
      
    - name: Find built JAR
      id: find_jar
      run: |
        JAR_PATH=$(find Iris/build -name "Iris-*.jar" -type f | head -1)
        if [ -z "$JAR_PATH" ]; then
          echo "❌ JAR file not found!"
          exit 1
        fi
        echo "jar_path=$JAR_PATH" >> $GITHUB_OUTPUT
        echo "jar_name=$(basename $JAR_PATH)" >> $GITHUB_OUTPUT
        echo "✅ Found JAR: $JAR_PATH"
        
    - name: Upload Iris JAR as artifact
      uses: actions/upload-artifact@v4
      with:
        name: iris-build-${{ github.run_number }}
        path: ${{ steps.find_jar.outputs.jar_path }}
        retention-days: 30

  # Job opcional para releases automáticos em tags
  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Build Iris
      run: ./gradlew iris
      
    - name: Find built JAR
      id: find_jar
      run: |
        JAR_PATH=$(find Iris/build -name "Iris-*.jar" -type f | head -1)
        echo "jar_path=$JAR_PATH" >> $GITHUB_OUTPUT
        echo "jar_name=$(basename $JAR_PATH)" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ steps.find_jar.outputs.jar_path }}
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
